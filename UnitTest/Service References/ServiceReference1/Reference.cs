//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnitTest.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Response", Namespace="http://schemas.datacontract.org/2004/07/Tasko")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UnitTest.ServiceReference1.Order))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UnitTest.ServiceReference1.VendorService[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UnitTest.ServiceReference1.VendorService))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UnitTest.ServiceReference1.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UnitTest.ServiceReference1.Vendor))]
    public partial class Response : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((this.ErrorField.Equals(value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Tasko.Model")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OrderStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RequestedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorServiceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIdField, value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderIdField, value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderStatusField, value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short OrderStatusId {
            get {
                return this.OrderStatusIdField;
            }
            set {
                if ((this.OrderStatusIdField.Equals(value) != true)) {
                    this.OrderStatusIdField = value;
                    this.RaisePropertyChanged("OrderStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RequestedDate {
            get {
                return this.RequestedDateField;
            }
            set {
                if ((this.RequestedDateField.Equals(value) != true)) {
                    this.RequestedDateField = value;
                    this.RaisePropertyChanged("RequestedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceIdField, value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorId {
            get {
                return this.VendorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIdField, value) != true)) {
                    this.VendorIdField = value;
                    this.RaisePropertyChanged("VendorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorServiceId {
            get {
                return this.VendorServiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorServiceIdField, value) != true)) {
                    this.VendorServiceIdField = value;
                    this.RaisePropertyChanged("VendorServiceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VendorService", Namespace="http://schemas.datacontract.org/2004/07/Tasko.Model")]
    [System.SerializableAttribute()]
    public partial class VendorService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Tasko.Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNumber {
            get {
                return this.MobileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNumberField, value) != true)) {
                    this.MobileNumberField = value;
                    this.RaisePropertyChanged("MobileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassWord {
            get {
                return this.PassWordField;
            }
            set {
                if ((object.ReferenceEquals(this.PassWordField, value) != true)) {
                    this.PassWordField = value;
                    this.RaisePropertyChanged("PassWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vendor", Namespace="http://schemas.datacontract.org/2004/07/Tasko.Model")]
    [System.SerializableAttribute()]
    public partial class Vendor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActiveTimePerDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BaseRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CallsToCustomerCareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataConsumptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVendorLiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVendorVerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoOfEmployeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeSpentOnAppField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActiveTimePerDay {
            get {
                return this.ActiveTimePerDayField;
            }
            set {
                if ((this.ActiveTimePerDayField.Equals(value) != true)) {
                    this.ActiveTimePerDayField = value;
                    this.RaisePropertyChanged("ActiveTimePerDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BaseRate {
            get {
                return this.BaseRateField;
            }
            set {
                if ((this.BaseRateField.Equals(value) != true)) {
                    this.BaseRateField = value;
                    this.RaisePropertyChanged("BaseRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallsToCustomerCare {
            get {
                return this.CallsToCustomerCareField;
            }
            set {
                if ((this.CallsToCustomerCareField.Equals(value) != true)) {
                    this.CallsToCustomerCareField = value;
                    this.RaisePropertyChanged("CallsToCustomerCare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataConsumption {
            get {
                return this.DataConsumptionField;
            }
            set {
                if ((this.DataConsumptionField.Equals(value) != true)) {
                    this.DataConsumptionField = value;
                    this.RaisePropertyChanged("DataConsumption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVendorLive {
            get {
                return this.IsVendorLiveField;
            }
            set {
                if ((this.IsVendorLiveField.Equals(value) != true)) {
                    this.IsVendorLiveField = value;
                    this.RaisePropertyChanged("IsVendorLive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVendorVerified {
            get {
                return this.IsVendorVerifiedField;
            }
            set {
                if ((this.IsVendorVerifiedField.Equals(value) != true)) {
                    this.IsVendorVerifiedField = value;
                    this.RaisePropertyChanged("IsVendorVerified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNumber {
            get {
                return this.MobileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNumberField, value) != true)) {
                    this.MobileNumberField = value;
                    this.RaisePropertyChanged("MobileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfEmployees {
            get {
                return this.NoOfEmployeesField;
            }
            set {
                if ((this.NoOfEmployeesField.Equals(value) != true)) {
                    this.NoOfEmployeesField = value;
                    this.RaisePropertyChanged("NoOfEmployees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeSpentOnApp {
            get {
                return this.TimeSpentOnAppField;
            }
            set {
                if ((this.TimeSpentOnAppField.Equals(value) != true)) {
                    this.TimeSpentOnAppField = value;
                    this.RaisePropertyChanged("TimeSpentOnApp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAuthenticationService")]
    public interface IAuthenticationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetToken", ReplyAction="http://tempuri.org/IAuthenticationService/GetTokenResponse")]
        UnitTest.ServiceReference1.Response GetToken();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetToken", ReplyAction="http://tempuri.org/IAuthenticationService/GetTokenResponse")]
        System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetTokenAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Login", ReplyAction="http://tempuri.org/IAuthenticationService/LoginResponse")]
        UnitTest.ServiceReference1.Response Login(string username, string password, string mobilenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Login", ReplyAction="http://tempuri.org/IAuthenticationService/LoginResponse")]
        System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> LoginAsync(string username, string password, string mobilenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Logout", ReplyAction="http://tempuri.org/IAuthenticationService/LogoutResponse")]
        UnitTest.ServiceReference1.Response Logout(string userId, string authCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Logout", ReplyAction="http://tempuri.org/IAuthenticationService/LogoutResponse")]
        System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> LogoutAsync(string userId, string authCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetUserDetails", ReplyAction="http://tempuri.org/IAuthenticationService/GetUserDetailsResponse")]
        UnitTest.ServiceReference1.Response GetUserDetails(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetUserDetails", ReplyAction="http://tempuri.org/IAuthenticationService/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetUserDetailsAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetVendorDetails", ReplyAction="http://tempuri.org/IAuthenticationService/GetVendorDetailsResponse")]
        UnitTest.ServiceReference1.Response GetVendorDetails(string vendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetVendorDetails", ReplyAction="http://tempuri.org/IAuthenticationService/GetVendorDetailsResponse")]
        System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetVendorDetailsAsync(string vendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetOrderDetails", ReplyAction="http://tempuri.org/IAuthenticationService/GetOrderDetailsResponse")]
        UnitTest.ServiceReference1.Response GetOrderDetails(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetOrderDetails", ReplyAction="http://tempuri.org/IAuthenticationService/GetOrderDetailsResponse")]
        System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetOrderDetailsAsync(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetVendorServices", ReplyAction="http://tempuri.org/IAuthenticationService/GetVendorServicesResponse")]
        UnitTest.ServiceReference1.Response GetVendorServices(string vendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetVendorServices", ReplyAction="http://tempuri.org/IAuthenticationService/GetVendorServicesResponse")]
        System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetVendorServicesAsync(string vendorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetVendorSubServices", ReplyAction="http://tempuri.org/IAuthenticationService/GetVendorSubServicesResponse")]
        UnitTest.ServiceReference1.Response GetVendorSubServices(string vendorServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetVendorSubServices", ReplyAction="http://tempuri.org/IAuthenticationService/GetVendorSubServicesResponse")]
        System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetVendorSubServicesAsync(string vendorServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UpdateOrderStatus", ReplyAction="http://tempuri.org/IAuthenticationService/UpdateOrderStatusResponse")]
        UnitTest.ServiceReference1.Response UpdateOrderStatus(string orderId, short orderStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UpdateOrderStatus", ReplyAction="http://tempuri.org/IAuthenticationService/UpdateOrderStatusResponse")]
        System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> UpdateOrderStatusAsync(string orderId, short orderStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UpdateVendorServices", ReplyAction="http://tempuri.org/IAuthenticationService/UpdateVendorServicesResponse")]
        UnitTest.ServiceReference1.Response UpdateVendorServices(UnitTest.ServiceReference1.VendorService[] vendorServices);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UpdateVendorServices", ReplyAction="http://tempuri.org/IAuthenticationService/UpdateVendorServicesResponse")]
        System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> UpdateVendorServicesAsync(UnitTest.ServiceReference1.VendorService[] vendorServices);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UpdateVendorBaseRate", ReplyAction="http://tempuri.org/IAuthenticationService/UpdateVendorBaseRateResponse")]
        UnitTest.ServiceReference1.Response UpdateVendorBaseRate(string vendorId, double baseRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UpdateVendorBaseRate", ReplyAction="http://tempuri.org/IAuthenticationService/UpdateVendorBaseRateResponse")]
        System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> UpdateVendorBaseRateAsync(string vendorId, double baseRate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationServiceChannel : UnitTest.ServiceReference1.IAuthenticationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationServiceClient : System.ServiceModel.ClientBase<UnitTest.ServiceReference1.IAuthenticationService>, UnitTest.ServiceReference1.IAuthenticationService {
        
        public AuthenticationServiceClient() {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UnitTest.ServiceReference1.Response GetToken() {
            return base.Channel.GetToken();
        }
        
        public System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetTokenAsync() {
            return base.Channel.GetTokenAsync();
        }
        
        public UnitTest.ServiceReference1.Response Login(string username, string password, string mobilenumber) {
            return base.Channel.Login(username, password, mobilenumber);
        }
        
        public System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> LoginAsync(string username, string password, string mobilenumber) {
            return base.Channel.LoginAsync(username, password, mobilenumber);
        }
        
        public UnitTest.ServiceReference1.Response Logout(string userId, string authCode) {
            return base.Channel.Logout(userId, authCode);
        }
        
        public System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> LogoutAsync(string userId, string authCode) {
            return base.Channel.LogoutAsync(userId, authCode);
        }
        
        public UnitTest.ServiceReference1.Response GetUserDetails(string id) {
            return base.Channel.GetUserDetails(id);
        }
        
        public System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetUserDetailsAsync(string id) {
            return base.Channel.GetUserDetailsAsync(id);
        }
        
        public UnitTest.ServiceReference1.Response GetVendorDetails(string vendorId) {
            return base.Channel.GetVendorDetails(vendorId);
        }
        
        public System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetVendorDetailsAsync(string vendorId) {
            return base.Channel.GetVendorDetailsAsync(vendorId);
        }
        
        public UnitTest.ServiceReference1.Response GetOrderDetails(string orderId) {
            return base.Channel.GetOrderDetails(orderId);
        }
        
        public System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetOrderDetailsAsync(string orderId) {
            return base.Channel.GetOrderDetailsAsync(orderId);
        }
        
        public UnitTest.ServiceReference1.Response GetVendorServices(string vendorId) {
            return base.Channel.GetVendorServices(vendorId);
        }
        
        public System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetVendorServicesAsync(string vendorId) {
            return base.Channel.GetVendorServicesAsync(vendorId);
        }
        
        public UnitTest.ServiceReference1.Response GetVendorSubServices(string vendorServiceId) {
            return base.Channel.GetVendorSubServices(vendorServiceId);
        }
        
        public System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> GetVendorSubServicesAsync(string vendorServiceId) {
            return base.Channel.GetVendorSubServicesAsync(vendorServiceId);
        }
        
        public UnitTest.ServiceReference1.Response UpdateOrderStatus(string orderId, short orderStatus) {
            return base.Channel.UpdateOrderStatus(orderId, orderStatus);
        }
        
        public System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> UpdateOrderStatusAsync(string orderId, short orderStatus) {
            return base.Channel.UpdateOrderStatusAsync(orderId, orderStatus);
        }
        
        public UnitTest.ServiceReference1.Response UpdateVendorServices(UnitTest.ServiceReference1.VendorService[] vendorServices) {
            return base.Channel.UpdateVendorServices(vendorServices);
        }
        
        public System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> UpdateVendorServicesAsync(UnitTest.ServiceReference1.VendorService[] vendorServices) {
            return base.Channel.UpdateVendorServicesAsync(vendorServices);
        }
        
        public UnitTest.ServiceReference1.Response UpdateVendorBaseRate(string vendorId, double baseRate) {
            return base.Channel.UpdateVendorBaseRate(vendorId, baseRate);
        }
        
        public System.Threading.Tasks.Task<UnitTest.ServiceReference1.Response> UpdateVendorBaseRateAsync(string vendorId, double baseRate) {
            return base.Channel.UpdateVendorBaseRateAsync(vendorId, baseRate);
        }
    }
}
