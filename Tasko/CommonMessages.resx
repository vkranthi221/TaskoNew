<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AUTHENTICATION_FAILED" xml:space="preserve">
    <value>Authentication failed</value>
  </data>
  <data name="AUTHENTICATION_SUCCESSFULL" xml:space="preserve">
    <value>Authentication Successful</value>
  </data>
  <data name="CUSTOMER_ADDRESS_INVALID" xml:space="preserve">
    <value>Customer Address Invalid</value>
  </data>
  <data name="CUSTOMER_ADDRESS_NOT_FOUND" xml:space="preserve">
    <value>Customer Addresses not found</value>
  </data>
  <data name="CUSTOMER_DETAILS_INVALID" xml:space="preserve">
    <value>Customer Id and address are mandatory</value>
  </data>
  <data name="CUSTOMER_NOT_FOUND" xml:space="preserve">
    <value>Customer not found</value>
  </data>
  <data name="ERROR_ADDING_CUSTOMER" xml:space="preserve">
    <value>Error Adding Customer Details</value>
  </data>
  <data name="ERROR_GENERATING_OTP" xml:space="preserve">
    <value>Error Generating OTP</value>
  </data>
  <data name="ERROR_LOGGING_OUT" xml:space="preserve">
    <value>Error logging out</value>
  </data>
  <data name="ERROR_UPDATING_ORDER_STATUS" xml:space="preserve">
    <value>Error while updating OrderStatus</value>
  </data>
  <data name="ERROR_UPDATING_VENDOR_BASE_RATE" xml:space="preserve">
    <value>Error while updating Vendor Base Rate</value>
  </data>
  <data name="ERROR_UPDATING_VENDOR_SERVICES" xml:space="preserve">
    <value>Error while updating Vendor Services</value>
  </data>
  <data name="ERROR_VALIDATING_OTP" xml:space="preserve">
    <value>Error validating OTP</value>
  </data>
  <data name="INVALID_AUTHCODE" xml:space="preserve">
    <value>Invalid Authcode</value>
  </data>
  <data name="INVALID_CREDENTIALS" xml:space="preserve">
    <value>Invalid Credentials</value>
  </data>
  <data name="INVALID_DETAILS" xml:space="preserve">
    <value>Invalid Details</value>
  </data>
  <data name="INVALID_OLD_PASSWORD" xml:space="preserve">
    <value>Invalid old password</value>
  </data>
  <data name="INVALID_OTP" xml:space="preserve">
    <value>Invalid OTP</value>
  </data>
  <data name="INVALID_OTP_PHONENUMBER" xml:space="preserve">
    <value>Invalid Phone Number Or OTP</value>
  </data>
  <data name="INVALID_TOKEN_CODE" xml:space="preserve">
    <value>Invalid token code</value>
  </data>
  <data name="LOGIN_SUCCESSFULL" xml:space="preserve">
    <value>Login SuccessfulL</value>
  </data>
  <data name="NO_ORDERS_FOR_VENDOR" xml:space="preserve">
    <value>No orders for vendor</value>
  </data>
  <data name="NO_RATINGS_FOR_VENDOR" xml:space="preserve">
    <value>No ratings for vendor</value>
  </data>
  <data name="NO_SERVICES_AVAILABLE" xml:space="preserve">
    <value>No services available</value>
  </data>
  <data name="NO_SUB_SERVICES_AVAILABLE" xml:space="preserve">
    <value>No sub services available</value>
  </data>
  <data name="ORDERS_NOT_FOUND" xml:space="preserve">
    <value>Orders not found</value>
  </data>
  <data name="ORDER_NOT_CONFIRMED" xml:space="preserve">
    <value>Order not Confirmed</value>
  </data>
  <data name="ORDER_NOT_FOUND" xml:space="preserve">
    <value>Order not found</value>
  </data>
  <data name="SERVICES_NOT_FOUND" xml:space="preserve">
    <value>Services not found</value>
  </data>
  <data name="SUCCESS" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="VENDORS_NOT_FOUND" xml:space="preserve">
    <value>Vendors are not found for the selected service</value>
  </data>
  <data name="VENDOR_NOT_FOUND" xml:space="preserve">
    <value>Vendor not found</value>
  </data>
  <data name="VENDOR_PRESENT_IN_FAVORITE_LIST" xml:space="preserve">
    <value>This vendor is already present in your favorite list.</value>
  </data>
  <data name="SERVICE_IN_USE" xml:space="preserve">
    <value>Unable to delete the selected service, as this service is in use.</value>
  </data>
  <data name="NO_ORDERS" xml:space="preserve">
    <value>No Orders</value>
  </data>
  <data name="NO_VENDORS" xml:space="preserve">
    <value>Vendors not found</value>
  </data>
</root>